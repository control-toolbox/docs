var documenterSearchIndex = {"docs":
[{"location":"api.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"CurrentModule = OptimalControl","category":"page"},{"location":"api.html","page":"API","title":"API","text":"Modules = [OptimalControl]\nOrder = [:module, :type, :function, :macro]","category":"page"},{"location":"api.html#OptimalControl.OptimalControl","page":"API","title":"OptimalControl.OptimalControl","text":"OptimalControl module.\n\nLists all the imported modules and packages:\n\nBase\nCTBase\nCTDirect\nCTDirectShooting\nCTFlows\nCore\nDocStringExtensions\nReexport\n\nList of all the exported names:\n\n*\nAbstractOptimalControlModel\nAbstractOptimalControlSolution\nAd\nAdjoint\nAdjoints\nAmbiguousDescription\nBoundaryConstraintFunction\nCTBase\nCTCallback\nCTCallbacks\nCTException\nCTFlows\nControlConstraintFunction\nControlFunction\nControls\nDescription\nDimension\nDynamicsFunction\nFlow\nHamiltonian\nHamiltonianVectorField\nInconsistentArgument\nIncorrectArgument\nIncorrectMethod\nIncorrectOutput\nIndex\nLagrangeFunction\nMayerFunction\nMixedConstraintFunction\nModel\nMultiplierFunction\nMyNumber\nMyVector\nOptimalControlModel\nOptimalControlSolution\nPoisson\nPrintCallback\nState\nStateConstraintFunction\nStates\nStopCallback\nTime\nTimes\nTimesDisc\nVectorField\nadd\nconstraint\nconstraint!\nconstraint_type\nconstraints\nconstraints_labels\ncontrol!\ncontrol_dimension\ncontrol_labels\ncriterion\n@ctfunction_sv\n@ctfunction_td_sv\nctgradient\nctindices\nctinterpolate\nctjacobian\ndynamics\nfinal_time\ngetFullDescription\nget_priority_print_callbacks\nget_priority_stop_callbacks\nhas\ninitial_time\nisautonomous\nismax\nismin\nisnonautonomous\nlagrange\nmakeDescription\nmayer\nnlp_constraints\nobjective!\nplot\nplot!\nprune_call\nremove_constraint!\nreplace_call\nsolve\nstate!\nstate_dimension\nstate_labels\nsubs\ntime!\n\n\n\n\n\n","category":"module"},{"location":"api.html#OptimalControl.solve-Tuple{OptimalControlModel, Vararg{Any}}","page":"API","title":"OptimalControl.solve","text":"solve(\n    ocp::OptimalControlModel,\n    description...;\n    display,\n    kwargs...\n) -> Union{Nothing, OptimalControlSolution}\n\n\nSolve the the optimal control problem ocp. \n\n\n\n\n\n","category":"method"},{"location":"index.html#Introduction-to-the-OptimalControl.jl-package","page":"Introduction","title":"Introduction to the OptimalControl.jl package","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The OptimalControl.jl package is part of the control-toolbox ecosystem. It aims to provide tools to solve optimal control problems by direct and indirect methods. An optimal control problem can be described as minimising the cost functional","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"g(t_0 x(t_0) t_f x(t_f)) + int_t_0^t_f f^0(t x(t) u(t))mathrmdt","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"where the state x and the control u are functions subject, for t in t_0 t_f, to the differential constraint","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"   dotx(t) = f(t x(t) u(t))","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"and other constraints such as","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"beginarrayllcll\nxi_l  le xi(t u(t))        le xi_u \neta_l le eta(t x(t))       le eta_u \npsi_l le psi(t x(t) u(t)) le psi_u \nphi_l le phi(t_0 x(t_0) t_f x(t_f)) le phi_u\nendarray","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Contents.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Pages = [\"index.md\", \"api.md\"]\nDepth = 2","category":"page"},{"location":"index.html#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"To install a package from the control-toolbox ecosystem, please visit the installation page.","category":"page"},{"location":"index.html#Basic-usage","page":"Introduction","title":"Basic usage","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Consider we want to minimise the cost functional","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"    frac12int_0^1 u^2(t)  mathrmdt","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"subject to the dynamical constraints for t in 0 1","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"    dot x_1(t) = x_2(t) quad dot x_2(t) = u(t) in mathbbR","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"and the limit conditions","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"    x(0) = (-1 0) quad x(1) = (0 0)","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"First, we need to import the OptimalControl.jl package:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"using OptimalControl","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Then, we can define the problem","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"ocp = Model()                                    # the model for the problem definition\n\nstate!(ocp, 2)                                   # dimension of the state\ncontrol!(ocp, 1)                                 # dimension of the control\ntime!(ocp, [0, 1])                               # time interval\n\nobjective!(ocp, :lagrange, (x, u) -> 0.5u^2)     # objective\n\nA = [ 0 1\n      0 0 ]\nB = [ 0\n      1 ]\nconstraint!(ocp, :dynamics, (x, u) -> A*x + B*u) # dynamics\n\nconstraint!(ocp, :initial, [-1, 0])              # initial condition\nconstraint!(ocp, :final,   [0, 0])               # final condition\nnothing # hide","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Solve it","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"sol = solve(ocp)\nnothing # hide","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"and plot the solution","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"plot(sol, size=(700, 700))","category":"page"}]
}
